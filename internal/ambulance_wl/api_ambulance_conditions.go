/*
 * Waiting List Api
 *
 * Ambulance Waiting List management for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: xmandova@stuba.sk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ambulance_wl

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

type AmbulanceConditionsAPI interface {

	// internal registration of api routes
	addRoutes(routerGroup *gin.RouterGroup)

	// CreateCondition - Adds new condition to ambulance
	CreateCondition(ctx *gin.Context)

	// DeleteCondition - Deletes specific condition
	DeleteCondition(ctx *gin.Context)

	// GetCondition - Provides details about condition
	GetCondition(ctx *gin.Context)

	// GetConditions - Provides the list of conditions associated with ambulance
	GetConditions(ctx *gin.Context)

	// UpdateCondition - Updates specific condition
	UpdateCondition(ctx *gin.Context)
}

// partial implementation of AmbulanceConditionsAPI - all functions must be implemented in add on files
type implAmbulanceConditionsAPI struct {
}

func newAmbulanceConditionsAPI() AmbulanceConditionsAPI {
	return &implAmbulanceConditionsAPI{}
}

func (this *implAmbulanceConditionsAPI) addRoutes(routerGroup *gin.RouterGroup) {
	routerGroup.Handle(http.MethodPost, "/waiting-list/:ambulanceId/condition", this.CreateCondition)
	routerGroup.Handle(http.MethodDelete, "/waiting-list/:ambulanceId/condition/:conditionCode", this.DeleteCondition)
	routerGroup.Handle(http.MethodGet, "/waiting-list/:ambulanceId/condition/:conditionCode", this.GetCondition)
	routerGroup.Handle(http.MethodGet, "/waiting-list/:ambulanceId/condition", this.GetConditions)
	routerGroup.Handle(http.MethodPut, "/waiting-list/:ambulanceId/condition/:conditionCode", this.UpdateCondition)
}

// Copy following section to separate file, uncomment, and implement accordingly
